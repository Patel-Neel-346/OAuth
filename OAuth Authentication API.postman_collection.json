{
	"info": {
		"_postman_id": "1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p",
		"name": "Loan Management System API",
		"description": "API test collection for the Loan Management System with role-based authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register - User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has authToken\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.authToken).to.be.a('string');",
									"    pm.environment.set(\"authToken\", jsonData.data.authToken);",
									"});",
									"",
									"pm.test(\"Default role is USER\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.role).to.equal(\"user\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Regular User\",\n    \"email\": \"user@example.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user with default USER role"
					},
					"response": []
				},
				{
					"name": "Register - Borrower",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has borrower role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.role).to.equal(\"borrower\");",
									"    pm.environment.set(\"borrowerAuthToken\", jsonData.data.authToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Borrower\",\n    \"email\": \"borrower@example.com\",\n    \"password\": \"Password123\",\n    \"role\": \"borrower\",\n    \"monthlyIncome\": 5000,\n    \"employmentStatus\": \"employed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new borrower with borrower profile"
					},
					"response": []
				},
				{
					"name": "Register - Lender",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has lender role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.role).to.equal(\"lender\");",
									"    pm.environment.set(\"lenderAuthToken\", jsonData.data.authToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Lender\",\n    \"email\": \"lender@example.com\",\n    \"password\": \"Password123\",\n    \"role\": \"lender\",\n    \"lendingCapacity\": 100000,\n    \"interestRatePersonal\": 5.5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new lender with lender profile"
					},
					"response": []
				},
				{
					"name": "Register - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has authToken\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.authToken).to.be.a('string');",
									"    pm.environment.set(\"adminAuthToken\", jsonData.data.authToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Admin User\",\n    \"email\": \"admin@example.com\",\n    \"password\": \"AdminPassword123\",\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new admin user"
					},
					"response": []
				},
				{
					"name": "Login - User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has authToken\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.authToken).to.be.a('string');",
									"    pm.environment.set(\"authToken\", jsonData.data.authToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login as regular user"
					},
					"response": []
				},
				{
					"name": "Login - Borrower",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has borrower profile\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.borrowerProfile).to.not.be.null;",
									"    pm.environment.set(\"borrowerAuthToken\", jsonData.data.authToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"borrower@example.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login as borrower"
					},
					"response": []
				},
				{
					"name": "Login - Lender",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has lender profile\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.lenderProfile).to.not.be.null;",
									"    pm.environment.set(\"lenderAuthToken\", jsonData.data.authToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"lender@example.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login as lender"
					},
					"response": []
				},
				{
					"name": "Role-Based Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has roles array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.user.roles).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"borrower@example.com\",\n    \"password\": \"Password123\",\n    \"role\": \"borrower\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/role/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"role",
								"login"
							]
						},
						"description": "Login with a specific role"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has new authToken\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.authToken).to.be.a('string');",
									"    pm.environment.set(\"authToken\", jsonData.data.authToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"refresh-token"
							]
						},
						"description": "Refresh the authentication token using the refresh token in cookies"
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully logged out message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"Successfully logged out\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logout and invalidate the current token"
					},
					"response": []
				}
			],
			"description": "Endpoints for registration, login, and authentication management"
		},
		{
			"name": "User Profile",
			"item": [
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.user).to.be.an('object');",
									"    pm.expect(jsonData.data.roles).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"profile"
							]
						},
						"description": "Get the current user's profile and roles"
					},
					"response": []
				},
				{
					"name": "Add Role to User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Role added successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"role added successfully\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"borrower\",\n    \"monthlyIncome\": 4500,\n    \"employmentStatus\": \"employed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"role"
							]
						},
						"description": "Add a borrower role to an existing user"
					},
					"response": []
				},
				{
					"name": "Remove Role from User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Role removed successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"role removed successfully\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/role/borrower",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"role",
								"borrower"
							]
						},
						"description": "Remove a borrower role from a user"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing user profiles and roles"
		},
		{
			"name": "Role-Based Dashboards",
			"item": [
				{
					"name": "User Dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/dashboard/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"dashboard",
								"user"
							]
						},
						"description": "Get the standard user dashboard"
					},
					"response": []
				},
				{
					"name": "Borrower Dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{borrowerAuthToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/dashboard/borrower",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"dashboard",
								"borrower"
							]
						},
						"description": "Get the borrower-specific dashboard (requires borrower role)"
					},
					"response": []
				},
				{
					"name": "Lender Dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{lenderAuthToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/dashboard/lender",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"dashboard",
								"lender"
							]
						},
						"description": "Get the lender-specific dashboard (requires lender role)"
					},
					"response": []
				},
				{
					"name": "Manager Dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerAuthToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/dashboard/manager",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"dashboard",
								"manager"
							]
						},
						"description": "Get the manager-specific dashboard (requires manager role)"
					},
					"response": []
				}
			],
			"description": "Endpoints for role-specific dashboards"
		},
		{
			"name": "Loan Management",
			"item": [
				{
					"name": "Apply for Loan (Borrower Only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Loan application created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.loan).to.be.an('object');",
									"    pm.environment.set(\"loanId\", jsonData.data.loan._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{borrowerAuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 10000,\n    \"term\": 12,\n    \"purpose\": \"personal\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/loans/apply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"loans",
								"apply"
							]
						},
						"description": "Apply for a new loan (borrower access only)"
					},
					"response": []
				},
				{
					"name": "Review Loan Application (Lender Only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Loan application status updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.loan.status).to.equal(\"approved\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{lenderAuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"approved\",\n    \"interestRate\": 5.5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/loans/{{loanId}}/review",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"loans",
								"{{loanId}}",
								"review"
							]
						},
						"description": "Review and approve/reject a loan application (lender access only)"
					},
					"response": []
				},
				{
					"name": "Get Borrower Loans",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Loans array returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.loans).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{borrowerAuthToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/loans/borrower",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"loans",
								"borrower"
							]
						},
						"description": "Get all loans for the current borrower"
					},
					"response": []
				},
				{
					"name": "Get Lender Loans",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Loans array returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.loans).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{lenderAuthToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/loans/lender",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"loans",
								"lender"
							]
						},
						"description": "Get all loans managed by the current lender"
					},
					"response": []
				}
			],
			"description": "Endpoints for loan application and management (role-specific access)"
		},
		{
			"name": "Data Management",
			"item": [
				{
					"name": "Upload CSV Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data imported message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"successfully imported\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminAuthToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{