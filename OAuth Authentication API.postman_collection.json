{
	"info": {
		"_postman_id": "91a97a94-76a3-4995-a062-db8b77dc4a97",
		"name": "OAuth Authentication API",
		"description": "Collection for testing OAuth authentication and user management endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "37897270"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": "{{base_url}}/auth/register",
						"description": "Register a new user with email and password"
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": "{{base_url}}/auth/login",
						"description": "Login with email and password"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/auth/refresh-token",
						"description": "Get new authentication token using refresh token in cookies"
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": "{{base_url}}/auth/logout",
						"description": "Logout the current user and invalidate tokens"
					},
					"response": []
				}
			],
			"description": "User authentication related endpoints"
		},
		{
			"name": "User Profile",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": "{{base_url}}/auth/profile",
						"description": "Get the authenticated user's profile information"
					},
					"response": []
				}
			],
			"description": "User profile related endpoints"
		},
		{
			"name": "OAuth",
			"item": [
				{
					"name": "Google OAuth",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/auth/google",
						"description": "Initiate Google OAuth flow"
					},
					"response": []
				},
				{
					"name": "Facebook OAuth",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/auth/facebook",
						"description": "Initiate Facebook OAuth flow"
					},
					"response": []
				},
				{
					"name": "OAuth Success",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/success?token={{auth_token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"success"
							],
							"query": [
								{
									"key": "token",
									"value": "{{auth_token}}"
								}
							]
						},
						"description": "OAuth success redirect endpoint"
					},
					"response": []
				}
			],
			"description": "OAuth related endpoints"
		},
		{
			"name": "Documentation",
			"item": [
				{
					"name": "Swagger UI",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api-docs",
						"description": "View interactive API documentation"
					},
					"response": []
				},
				{
					"name": "Swagger JSON",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api-docs.json",
						"description": "Get raw Swagger JSON documentation"
					},
					"response": []
				}
			],
			"description": "API documentation endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Extract and save auth token from register or login responses",
					"if (pm.response.code === 200 || pm.response.code === 201) {",
					"    const jsonData = pm.response.json();",
					"    if (jsonData && jsonData.data && jsonData.data.authToken) {",
					"        pm.environment.set('auth_token', jsonData.data.authToken);",
					"        console.log('Auth token saved to environment variable');",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:7000",
			"type": "string"
		}
	]
}